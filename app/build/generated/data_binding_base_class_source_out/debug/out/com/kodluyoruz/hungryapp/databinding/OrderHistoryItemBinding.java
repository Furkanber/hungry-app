// Generated by view binder compiler. Do not edit!
package com.kodluyoruz.hungryapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.kodluyoruz.hungryapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrderHistoryItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView FoodNameTV;

  @NonNull
  public final TextView FoodQtyTV;

  @NonNull
  public final TextView addressDistrictTV;

  @NonNull
  public final TextView dateTV;

  @NonNull
  public final TextView orderNoteTV;

  @NonNull
  public final TextView priceTV;

  @NonNull
  public final TextView restaurantNameTV;

  @NonNull
  public final CardView restaurantPointCard;

  @NonNull
  public final TextView restaurantPointTV;

  private OrderHistoryItemBinding(@NonNull CardView rootView, @NonNull TextView FoodNameTV,
      @NonNull TextView FoodQtyTV, @NonNull TextView addressDistrictTV, @NonNull TextView dateTV,
      @NonNull TextView orderNoteTV, @NonNull TextView priceTV, @NonNull TextView restaurantNameTV,
      @NonNull CardView restaurantPointCard, @NonNull TextView restaurantPointTV) {
    this.rootView = rootView;
    this.FoodNameTV = FoodNameTV;
    this.FoodQtyTV = FoodQtyTV;
    this.addressDistrictTV = addressDistrictTV;
    this.dateTV = dateTV;
    this.orderNoteTV = orderNoteTV;
    this.priceTV = priceTV;
    this.restaurantNameTV = restaurantNameTV;
    this.restaurantPointCard = restaurantPointCard;
    this.restaurantPointTV = restaurantPointTV;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static OrderHistoryItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrderHistoryItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.order_history_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrderHistoryItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.FoodNameTV;
      TextView FoodNameTV = rootView.findViewById(id);
      if (FoodNameTV == null) {
        break missingId;
      }

      id = R.id.FoodQtyTV;
      TextView FoodQtyTV = rootView.findViewById(id);
      if (FoodQtyTV == null) {
        break missingId;
      }

      id = R.id.addressDistrictTV;
      TextView addressDistrictTV = rootView.findViewById(id);
      if (addressDistrictTV == null) {
        break missingId;
      }

      id = R.id.dateTV;
      TextView dateTV = rootView.findViewById(id);
      if (dateTV == null) {
        break missingId;
      }

      id = R.id.orderNoteTV;
      TextView orderNoteTV = rootView.findViewById(id);
      if (orderNoteTV == null) {
        break missingId;
      }

      id = R.id.priceTV;
      TextView priceTV = rootView.findViewById(id);
      if (priceTV == null) {
        break missingId;
      }

      id = R.id.restaurantNameTV;
      TextView restaurantNameTV = rootView.findViewById(id);
      if (restaurantNameTV == null) {
        break missingId;
      }

      id = R.id.restaurant_point_card;
      CardView restaurantPointCard = rootView.findViewById(id);
      if (restaurantPointCard == null) {
        break missingId;
      }

      id = R.id.restaurantPointTV;
      TextView restaurantPointTV = rootView.findViewById(id);
      if (restaurantPointTV == null) {
        break missingId;
      }

      return new OrderHistoryItemBinding((CardView) rootView, FoodNameTV, FoodQtyTV,
          addressDistrictTV, dateTV, orderNoteTV, priceTV, restaurantNameTV, restaurantPointCard,
          restaurantPointTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
