// Generated by view binder compiler. Do not edit!
package com.kodluyoruz.hungryapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.kodluyoruz.hungryapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FoodListRecyclerItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView foodCardView;

  @NonNull
  public final ImageView imageViewFood;

  @NonNull
  public final TextView textViewFoodIngredients;

  @NonNull
  public final TextView textViewFoodName;

  @NonNull
  public final TextView textViewFoodPrice;

  private FoodListRecyclerItemBinding(@NonNull CardView rootView, @NonNull CardView foodCardView,
      @NonNull ImageView imageViewFood, @NonNull TextView textViewFoodIngredients,
      @NonNull TextView textViewFoodName, @NonNull TextView textViewFoodPrice) {
    this.rootView = rootView;
    this.foodCardView = foodCardView;
    this.imageViewFood = imageViewFood;
    this.textViewFoodIngredients = textViewFoodIngredients;
    this.textViewFoodName = textViewFoodName;
    this.textViewFoodPrice = textViewFoodPrice;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static FoodListRecyclerItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FoodListRecyclerItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.food_list_recycler_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FoodListRecyclerItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView foodCardView = (CardView) rootView;

      id = R.id.imageViewFood;
      ImageView imageViewFood = rootView.findViewById(id);
      if (imageViewFood == null) {
        break missingId;
      }

      id = R.id.textViewFoodIngredients;
      TextView textViewFoodIngredients = rootView.findViewById(id);
      if (textViewFoodIngredients == null) {
        break missingId;
      }

      id = R.id.textViewFoodName;
      TextView textViewFoodName = rootView.findViewById(id);
      if (textViewFoodName == null) {
        break missingId;
      }

      id = R.id.textViewFoodPrice;
      TextView textViewFoodPrice = rootView.findViewById(id);
      if (textViewFoodPrice == null) {
        break missingId;
      }

      return new FoodListRecyclerItemBinding((CardView) rootView, foodCardView, imageViewFood,
          textViewFoodIngredients, textViewFoodName, textViewFoodPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
