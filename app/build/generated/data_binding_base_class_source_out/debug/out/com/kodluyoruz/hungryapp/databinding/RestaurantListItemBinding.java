// Generated by view binder compiler. Do not edit!
package com.kodluyoruz.hungryapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.kodluyoruz.hungryapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RestaurantListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ImageView restaurantImageview;

  @NonNull
  public final TextView restaurantMinPriceTextview;

  @NonNull
  public final TextView restaurantNameEdittext;

  @NonNull
  public final CardView restaurantPointCard;

  @NonNull
  public final TextView restaurantPointTextview;

  @NonNull
  public final TextView restaurantRemainTimeTextview;

  private RestaurantListItemBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView,
      @NonNull LinearLayout linearLayout, @NonNull ImageView restaurantImageview,
      @NonNull TextView restaurantMinPriceTextview, @NonNull TextView restaurantNameEdittext,
      @NonNull CardView restaurantPointCard, @NonNull TextView restaurantPointTextview,
      @NonNull TextView restaurantRemainTimeTextview) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.linearLayout = linearLayout;
    this.restaurantImageview = restaurantImageview;
    this.restaurantMinPriceTextview = restaurantMinPriceTextview;
    this.restaurantNameEdittext = restaurantNameEdittext;
    this.restaurantPointCard = restaurantPointCard;
    this.restaurantPointTextview = restaurantPointTextview;
    this.restaurantRemainTimeTextview = restaurantRemainTimeTextview;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RestaurantListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RestaurantListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.restaurant_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RestaurantListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = rootView.findViewById(id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.restaurant_imageview;
      ImageView restaurantImageview = rootView.findViewById(id);
      if (restaurantImageview == null) {
        break missingId;
      }

      id = R.id.restaurant_min_price_textview;
      TextView restaurantMinPriceTextview = rootView.findViewById(id);
      if (restaurantMinPriceTextview == null) {
        break missingId;
      }

      id = R.id.restaurant_name_edittext;
      TextView restaurantNameEdittext = rootView.findViewById(id);
      if (restaurantNameEdittext == null) {
        break missingId;
      }

      id = R.id.restaurant_point_card;
      CardView restaurantPointCard = rootView.findViewById(id);
      if (restaurantPointCard == null) {
        break missingId;
      }

      id = R.id.restaurant_point_textview;
      TextView restaurantPointTextview = rootView.findViewById(id);
      if (restaurantPointTextview == null) {
        break missingId;
      }

      id = R.id.restaurant_remain_time_textview;
      TextView restaurantRemainTimeTextview = rootView.findViewById(id);
      if (restaurantRemainTimeTextview == null) {
        break missingId;
      }

      return new RestaurantListItemBinding((ConstraintLayout) rootView, cardView, linearLayout,
          restaurantImageview, restaurantMinPriceTextview, restaurantNameEdittext,
          restaurantPointCard, restaurantPointTextview, restaurantRemainTimeTextview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
