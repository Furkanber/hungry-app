// Generated by view binder compiler. Do not edit!
package com.kodluyoruz.hungryapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.kodluyoruz.hungryapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddAddressBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAddAddress;

  @NonNull
  public final TextInputEditText textInputEditTextAddressCity;

  @NonNull
  public final TextInputEditText textInputEditTextAddressDetail;

  @NonNull
  public final TextInputEditText textInputEditTextAddressDistrict;

  @NonNull
  public final TextInputEditText textInputEditTextAddressTitle;

  @NonNull
  public final TextInputLayout textInputLayoutAddressCity;

  @NonNull
  public final TextInputLayout textInputLayoutAddressDetail;

  @NonNull
  public final TextInputLayout textInputLayoutAddressDistrict;

  @NonNull
  public final TextInputLayout textInputLayoutAddressTitle;

  private FragmentAddAddressBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonAddAddress, @NonNull TextInputEditText textInputEditTextAddressCity,
      @NonNull TextInputEditText textInputEditTextAddressDetail,
      @NonNull TextInputEditText textInputEditTextAddressDistrict,
      @NonNull TextInputEditText textInputEditTextAddressTitle,
      @NonNull TextInputLayout textInputLayoutAddressCity,
      @NonNull TextInputLayout textInputLayoutAddressDetail,
      @NonNull TextInputLayout textInputLayoutAddressDistrict,
      @NonNull TextInputLayout textInputLayoutAddressTitle) {
    this.rootView = rootView;
    this.buttonAddAddress = buttonAddAddress;
    this.textInputEditTextAddressCity = textInputEditTextAddressCity;
    this.textInputEditTextAddressDetail = textInputEditTextAddressDetail;
    this.textInputEditTextAddressDistrict = textInputEditTextAddressDistrict;
    this.textInputEditTextAddressTitle = textInputEditTextAddressTitle;
    this.textInputLayoutAddressCity = textInputLayoutAddressCity;
    this.textInputLayoutAddressDetail = textInputLayoutAddressDetail;
    this.textInputLayoutAddressDistrict = textInputLayoutAddressDistrict;
    this.textInputLayoutAddressTitle = textInputLayoutAddressTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddAddress;
      Button buttonAddAddress = rootView.findViewById(id);
      if (buttonAddAddress == null) {
        break missingId;
      }

      id = R.id.textInputEditTextAddressCity;
      TextInputEditText textInputEditTextAddressCity = rootView.findViewById(id);
      if (textInputEditTextAddressCity == null) {
        break missingId;
      }

      id = R.id.textInputEditTextAddressDetail;
      TextInputEditText textInputEditTextAddressDetail = rootView.findViewById(id);
      if (textInputEditTextAddressDetail == null) {
        break missingId;
      }

      id = R.id.textInputEditTextAddressDistrict;
      TextInputEditText textInputEditTextAddressDistrict = rootView.findViewById(id);
      if (textInputEditTextAddressDistrict == null) {
        break missingId;
      }

      id = R.id.textInputEditTextAddressTitle;
      TextInputEditText textInputEditTextAddressTitle = rootView.findViewById(id);
      if (textInputEditTextAddressTitle == null) {
        break missingId;
      }

      id = R.id.textInputLayoutAddressCity;
      TextInputLayout textInputLayoutAddressCity = rootView.findViewById(id);
      if (textInputLayoutAddressCity == null) {
        break missingId;
      }

      id = R.id.textInputLayoutAddressDetail;
      TextInputLayout textInputLayoutAddressDetail = rootView.findViewById(id);
      if (textInputLayoutAddressDetail == null) {
        break missingId;
      }

      id = R.id.textInputLayoutAddressDistrict;
      TextInputLayout textInputLayoutAddressDistrict = rootView.findViewById(id);
      if (textInputLayoutAddressDistrict == null) {
        break missingId;
      }

      id = R.id.textInputLayoutAddressTitle;
      TextInputLayout textInputLayoutAddressTitle = rootView.findViewById(id);
      if (textInputLayoutAddressTitle == null) {
        break missingId;
      }

      return new FragmentAddAddressBinding((ConstraintLayout) rootView, buttonAddAddress,
          textInputEditTextAddressCity, textInputEditTextAddressDetail,
          textInputEditTextAddressDistrict, textInputEditTextAddressTitle,
          textInputLayoutAddressCity, textInputLayoutAddressDetail, textInputLayoutAddressDistrict,
          textInputLayoutAddressTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
