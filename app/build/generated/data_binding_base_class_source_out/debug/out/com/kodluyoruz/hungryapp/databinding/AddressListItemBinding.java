// Generated by view binder compiler. Do not edit!
package com.kodluyoruz.hungryapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.kodluyoruz.hungryapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddressListItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView addressDetailTV;

  @NonNull
  public final TextView addressDistrictTV;

  @NonNull
  public final ImageView addressIconIV;

  @NonNull
  public final TextView addressTitleTV;

  private AddressListItemBinding(@NonNull CardView rootView, @NonNull TextView addressDetailTV,
      @NonNull TextView addressDistrictTV, @NonNull ImageView addressIconIV,
      @NonNull TextView addressTitleTV) {
    this.rootView = rootView;
    this.addressDetailTV = addressDetailTV;
    this.addressDistrictTV = addressDistrictTV;
    this.addressIconIV = addressIconIV;
    this.addressTitleTV = addressTitleTV;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static AddressListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddressListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.address_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddressListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressDetailTV;
      TextView addressDetailTV = rootView.findViewById(id);
      if (addressDetailTV == null) {
        break missingId;
      }

      id = R.id.addressDistrictTV;
      TextView addressDistrictTV = rootView.findViewById(id);
      if (addressDistrictTV == null) {
        break missingId;
      }

      id = R.id.addressIconIV;
      ImageView addressIconIV = rootView.findViewById(id);
      if (addressIconIV == null) {
        break missingId;
      }

      id = R.id.addressTitleTV;
      TextView addressTitleTV = rootView.findViewById(id);
      if (addressTitleTV == null) {
        break missingId;
      }

      return new AddressListItemBinding((CardView) rootView, addressDetailTV, addressDistrictTV,
          addressIconIV, addressTitleTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
