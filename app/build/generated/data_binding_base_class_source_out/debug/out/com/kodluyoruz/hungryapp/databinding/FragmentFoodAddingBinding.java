// Generated by view binder compiler. Do not edit!
package com.kodluyoruz.hungryapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputLayout;
import com.kodluyoruz.hungryapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFoodAddingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addMeal;

  @NonNull
  public final TextView addingFoodTitle;

  @NonNull
  public final TextInputLayout foodNameEditText;

  @NonNull
  public final ImageView foodPhoto;

  @NonNull
  public final TextInputLayout foodPriceEditText;

  @NonNull
  public final TextInputLayout mealIngredientsEditText;

  @NonNull
  public final TextView textView;

  private FragmentFoodAddingBinding(@NonNull ConstraintLayout rootView, @NonNull Button addMeal,
      @NonNull TextView addingFoodTitle, @NonNull TextInputLayout foodNameEditText,
      @NonNull ImageView foodPhoto, @NonNull TextInputLayout foodPriceEditText,
      @NonNull TextInputLayout mealIngredientsEditText, @NonNull TextView textView) {
    this.rootView = rootView;
    this.addMeal = addMeal;
    this.addingFoodTitle = addingFoodTitle;
    this.foodNameEditText = foodNameEditText;
    this.foodPhoto = foodPhoto;
    this.foodPriceEditText = foodPriceEditText;
    this.mealIngredientsEditText = mealIngredientsEditText;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFoodAddingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFoodAddingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_food_adding, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFoodAddingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addMeal;
      Button addMeal = rootView.findViewById(id);
      if (addMeal == null) {
        break missingId;
      }

      id = R.id.addingFoodTitle;
      TextView addingFoodTitle = rootView.findViewById(id);
      if (addingFoodTitle == null) {
        break missingId;
      }

      id = R.id.foodNameEditText;
      TextInputLayout foodNameEditText = rootView.findViewById(id);
      if (foodNameEditText == null) {
        break missingId;
      }

      id = R.id.foodPhoto;
      ImageView foodPhoto = rootView.findViewById(id);
      if (foodPhoto == null) {
        break missingId;
      }

      id = R.id.foodPriceEditText;
      TextInputLayout foodPriceEditText = rootView.findViewById(id);
      if (foodPriceEditText == null) {
        break missingId;
      }

      id = R.id.mealIngredientsEditText;
      TextInputLayout mealIngredientsEditText = rootView.findViewById(id);
      if (mealIngredientsEditText == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      return new FragmentFoodAddingBinding((ConstraintLayout) rootView, addMeal, addingFoodTitle,
          foodNameEditText, foodPhoto, foodPriceEditText, mealIngredientsEditText, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
